<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c9e7d9cb-b748-4822-b3c8-c0efdc18f998" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/rSettings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Main.py" beforeDir="false" afterPath="$PROJECT_DIR$/Main.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="PoolPredictor" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>is</find>
      <find>np.appen</find>
      <find>detect</find>
      <find>detect_intru</find>
      <find>statistics</find>
      <find>i</find>
      <find>.variance</find>
      <find>append(self.vel</find>
      <find>self.variancehist</find>
      <find>balls.append</find>
      <find>.collision</find>
      <find>.past</find>
      <find>ballframebuffer</find>
      <find>self.past</find>
      <find>nmissing</find>
      <find>self.veloci</find>
      <find>self.velocitypast</find>
      <find>multiple</find>
      <find>: 111</find>
      <find>poc</find>
      <find>showtraj</find>
      <find>ratio</find>
      <find>7_</find>
      <find>speedmul</find>
      <find>sleep</find>
      <find>print</find>
      <find>print(</find>
      <find>find_future</find>
      <find>motion.coeff</find>
      <find>line 3</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Ryan &lt;ryanscottmckay@gmail.com&gt;" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1ZCACTYBQY0iIeuzd2QqaCo1eyz" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/doc_resources" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="reference.settingsdialog.IDE.editor.colors.Language Defaults" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/depr" />
      <recent name="$PROJECT_DIR$/clips" />
      <recent name="$PROJECT_DIR$/debug_images/frames/old" />
      <recent name="$PROJECT_DIR$/debug_images/old" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/depr" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Python.Main">
    <configuration name="Main" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="PoolPredictor" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Main_12.22.2019.16:45" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="PoolPredictor" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/depr" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/depr/Mainrecover.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main2" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="PoolPredictor" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/depr/main2.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="tests3" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="PoolPredictor" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/depr/tests3.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="tests4" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="PoolPredictor" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/depr" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/depr/tests4.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.Main" />
        <item itemvalue="Python.main2" />
        <item itemvalue="Python.Main_12.22.2019.16:45" />
        <item itemvalue="Python.tests4" />
        <item itemvalue="Python.tests3" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c9e7d9cb-b748-4822-b3c8-c0efdc18f998" name="Default Changelist" comment="" />
      <created>1575758162621</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1575758162621</updated>
      <workItem from="1584332576031" duration="555000" />
      <workItem from="1584411157041" duration="998000" />
    </task>
    <task id="LOCAL-00001" summary="Added and updated some nested functions within the &#10;Table.check_all_intersections() method to look at all the intersecting &#10;points of the averaged lines and figure out which ones to keep. &#10;Here's the algorithm:&#10;1. check to see how far each point is from the center of the frame&#10;2. separate the points by what quadrant of the frame they are in,&#10;   such as upper-right 'ur' or bottom-left 'bl' and store in a dict&#10;3. sort the list in each quadrant by their distances from the center&#10;4. iterate through the quadrants, and grab the minimum center-dist point&#10;   from each. since the playfield is flat and formless, I am assuming &#10;   for now that the minimum lines in each quadrant will give us the&#10;   playfield lines, assuming we aren't missing lines in the detection&#10;   stage.&#10;5. check all of the points in each quadrant agains the groups assigned &#10;   to the good group list, and remove any that are &quot;inline&quot; with any of&#10;   the known good points. if they share an x or a y value, we know that&#10;   they cannot be entirely new lines representing a new part of the table&#10;   &#10;I have not yet sorted and assigned these remaining point-groups to their &#10;corresponding table part. That's next.&#10;&#10;At this point I certainly haven't PEP8'd it.">
      <created>1576133361468</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1576133361468</updated>
    </task>
    <task id="LOCAL-00002" summary="Got rid of some old unused functions and methods, and tons of old commented out lines.&#10;made the check_all_intersections method returns the list of known good points.&#10;replaced the set_boxes method with one that takes those known good points&#10;and sets them as the tables playbox, pocketbox, and tablebox attributes.&#10;added a drawboxes method to table that is called from play_frame() for &#10;if you want to be able to see the boundary boxes on the live playback.">
      <created>1576189332295</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1576189332295</updated>
    </task>
    <task id="LOCAL-00003" summary="Removed some more old unused functions and re-organized the Table.find_balls()&#10;method a bit. I added the ability to have different ball detection settings. &#10;I also Started the ball class.&#10;&#10;Next, I need to figure out how to make it figure out which balls are the&#10;from one frame to the next, so that I can draw the directional prediction &#10;lines">
      <created>1576198632875</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1576198632875</updated>
    </task>
    <task id="LOCAL-00004" summary="Added FPS tracking. Also added a global copy of each frame so that ball &#10;objects can easily access them for color checking. Added circles and balls&#10;lists to the Table class. Added a find_real_balls method to table to&#10;sort through the circles and decide whether to actually grant them ballship.&#10;created calculate_radius_square method to find the upper left and bottom&#10;right corners of each detected ball so that the color can be averaged easily.&#10;Also started adding to the Ball class. they now automatically take a crop &#10;of the image for color averaging. I haven't yet implemented the actual&#10;averaging operation. Also changed the cv.waitKey from triggering when esc&#10;is pressed to just cv.waitKey(1). I don't know why, but in a test, having&#10;a specific waitkey seemed to lower the frame rate considerably.">
      <created>1576214160872</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1576214160872</updated>
    </task>
    <task id="LOCAL-00005" summary="Added some descriptions for each of the global settings. find_balls now &#10;appends the circles found in each frame to the Table.circlehistory list,&#10;and deletes the oldest item, keeping the list ballframebuffer frames long.&#10;also made it so that get_ball_color is passed the balls number in the &#10;list, so that a seperate debug image can be output for each ball.">
      <created>1576258723574</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1576258723574</updated>
    </task>
    <task id="LOCAL-00006" summary="Started appending circles and  balls to table's circlehistory and ballhistory&#10;lists. Added the findlastposition method to the Ball class, which takes&#10;the ballhistory list and finds the ball with the smallest difference in &#10;distance. It then updates its lastpos and lastdist with the previous position,&#10;and the distance between the two points respectively. Added is_moving method&#10;which looks at the two points (current and past) and returns True if the&#10;distance is greater than the movementthresh. Started the get_movement_direction&#10;method which identifies the slope, and will then decide where to draw the &#10;motion line. Also made a global version of get_dist, and added the ability&#10;to specify whether you want the absolute value distance, or the relative,&#10;with the first point being the most recent, and the second being the historic.">
      <created>1576266033852</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1576266033852</updated>
    </task>
    <task id="LOCAL-00007" summary="Renamed the Ball class to Circle, so that I can have a subclass Ball &#10;that is only for graduated circles. Added a distance threshold for the &#10;circles find_last_position method that returns None for lastpos and dist&#10;if the distance is too high. This is to make it easy while iterating to&#10;know where HoughCircles missed failed ball in a certain frame. Also&#10;added to get_movement_path. It currently just returns a line from the&#10;current center to its center from the previous frame.">
      <created>1576342748922</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1576342748922</updated>
    </task>
    <task id="LOCAL-00008" summary="Completely revised the distance detection structure. I removed all &#10;methods from the Circle class except for those used to grab the color&#10;within that circle, and I moved the ball-continuity process into the&#10;Table.find_ball_groups method. I added a global frame number variable &#10;that I use for debugging. Basically, every frame, the new set of circles&#10;found is weighed against those in the last frame. Circles that seem to&#10;be contiguous are put into a group with their selves from past frames&#10;and added to Table.grouped_circles. I also added a color checking in &#10;addition to distance checking to help make sure the balls are the same.&#10;The major additions all happened within find_ball_groups. I added a&#10;frames folder to debug_images, and it is currently set up to draw the&#10;circles found in each group over every frame. Each group is drawn with &#10;a different color for better debugging.">
      <created>1576365272052</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1576365272052</updated>
    </task>
    <task id="LOCAL-00009" summary="Created the Ball subclass of Circle. So far, the only thing that's&#10;new from the circle is a .past attribute, which is a list of Circle&#10;objects that were deemed within the Table's find_ball_groups method to &#10;be the same ball from past frames. The find_ball_groups method works&#10;about the same as it did in the last commit, except it has been adapted&#10;so that, rather than just using a list of lists of past locations for &#10;each ball stored directly as a table attribute, the table's list is now&#10;full of ball objects. I added a whole bunch of magic to the Ball class,&#10;so that they can be indexed and appended all the same, so very little&#10;change was needed within the find_ball_groups method. I decided to&#10;switch to Ball objects so that I could more easily compare color and&#10;collisions with methods within the Ball class. Have not implemented any&#10;yet.">
      <created>1576432990527</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1576432990527</updated>
    </task>
    <task id="LOCAL-00010" summary="I restructured the decision tree within find_ball_groups so that it&#10;looks at color first, then moves on to distance. This seems to work much&#10;better. It seems to be able to group balls moving very quickly, even if&#10;there is a missing frame. Huge improvement.&#10;&#10;I also added a method to help with motion-blurred circles. Often Hough-&#10;Circles detects 2 circles on a ball when it is moving very quickly, but&#10;so far the circles have always somewhat overlapped, so I added a method&#10;that would look at all the circles from the frame, and see if any were&#10;closer together than their radii would allow in real life, and if there &#10;were, I would replace them with a point right in between the two. This &#10;improves color comparison as well.&#10;&#10;I also made a few of the Table methods static, and rearranged them to be&#10;all together at the bottom of the Table methods.">
      <created>1576440220008</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1576440220009</updated>
    </task>
    <task id="LOCAL-00011" summary="I added cProfile to try and figure out where the speed could be improved&#10;and found that opencv imshow and imwrite were taking the majority of the&#10;time. I am now working on implementing pyglview for showing the images&#10;so that the gpu can be utilized for playback. I put all of the imwrite&#10;calls under if debug: statements, so that I could turn that on and off&#10;easily for speed tests.">
      <created>1576531359811</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1576531359811</updated>
    </task>
    <task id="LOCAL-00012" summary="Now utilizes OpenGL via pyglview to achieve up to 23 fps. The prior&#10;version, using cv.imshow, got usually only around 4 to 8 fps. It is not&#10;feasible to use this real time with a projector and camera. HOOORAY!!!&#10;I also added a livegroups option at the top, which allows you to see the&#10;group estimations live on playback, rather than saving the frames to &#10;files individually.">
      <created>1576532847351</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1576532847351</updated>
    </task>
    <task id="LOCAL-00013" summary="Now utilizes OpenGL via pyglview to achieve up to 23 fps. The prior&#10;version, using cv.imshow, got usually only around 4 to 8 fps. It is not&#10;feasible to use this real time with a projector and camera. HOOORAY!!!&#10;I also added a livegroups option at the top, which allows you to see the&#10;group estimations live on playback, rather than saving the frames to &#10;files individually">
      <created>1576532912297</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1576532912297</updated>
    </task>
    <task id="LOCAL-00014" summary="I moved some of the initialization stuff like creating the capture and&#10;viewer instances from the top of the document to the main function. I&#10;also made it so that it re-instantiates the capture object after the&#10;Table is initialized so that it doesn't lose all the frames that the &#10;table uses to find itself. I also added a global cleanframe variable &#10;that is unadulterated by lines drawn by opencv. This is important for&#10;color comparison mainly. I added a third setting under find_balls, that&#10;seems to work a little better. I added a isblurred attribute to the&#10;circle class, which is set to False by default and updated by the &#10;average_motionblur_circles method. I then updated find_ball_groups so &#10;that there is a lower regular color threshold, and one that is used only&#10;if that circle was averaged from a blur. I also added an nmissingframes&#10;attribute to the ball class, which I use to multiply the distthresh by.&#10;I also added a method under the Ball class called is_past_boundary which&#10;take a particular boundary box as an argument, and returns True if the&#10;center of the ball is beyond that boundary. I also added an inpocket &#10;attribute to the Ball class, which is set to true if the ball is outside&#10;that boundary. I also changed the colors used to show the ball groupings&#10;to use the colors of the balls themselves, rather than random bright&#10;colors. This makes it easier to know if balls switch groups, and if the&#10;color average seems accurate. The color of the circles turns to green&#10;if it goes into a pocket.">
      <created>1576614108008</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1576614108008</updated>
    </task>
    <task id="LOCAL-00015" summary="More tuning on the ball continuity stuff. I added a x2 multiplier to the&#10;nmissingframes distancethresh multiplier. I added a pastdists attribute&#10;to the Ball class that I may use to detect anomalous detections. I made&#10;it so that balls that aren't detected at the very beginning start their&#10;own ball object, which goes away if it has a few missing frames and a&#10;total .past length of 2 or less, or if it has been missing for over 20&#10;frames. I currently have it so that it prints the bgr color tuple of&#10;each ball on the table, in the corresponding color. This is just for&#10;debugging, since there seem to be issues with balls swapping groups.&#10;&#10;Now I plan to try to sort the iteration in find_ball_groups by color&#10;differences as a priority, as opposed to distance first like it is now. &#10;I wish myself luck refactoring all that without creating a giant mess.">
      <created>1576624889997</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1576624889997</updated>
    </task>
    <task id="LOCAL-00016" summary="The main thing that I did was to change the dist_list function to&#10;colordiffs_n_distances, which does the same thing as dist_list did, but&#10;adds color differences and sorts by them. This makes it so that similar&#10;colors take priority over close distances. I also made it so that, once&#10;a ball is in a pocket, it won't look for itself on the playfield &#10;anymore. I haven't yet set exceptions for the white ball. That needs to&#10;happen. I increased the color threshold in average_motionblur_circles to&#10;catch more. Keep an eye out for problems with that. I started with a&#10;method to detect intrusions of arms and bodies onto the table. Just&#10;started, so it's not yet doing anything. I also added the ability for&#10;balls and circles to get hsv color. Haven't used it for anything yet,&#10;but I thought I'd play around with that and see where it gets me. I &#10;added a colorpast attribute to the Ball class, which keeps a list of&#10;ballframebuffer x 3 = 15 currently, and that's used to find the average&#10;color of the ball from the past little bit, because in the case of&#10;striped balls, there were some issues. Also added nballs as a global &#10;but haven't implemented it yet. The idea is that it would know that, if &#10;there are more balls than that number in its list, the bar for &#10;baller-status needs to be raised. More tomorrow!(:">
      <created>1576648228623</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1576648228623</updated>
    </task>
    <task id="LOCAL-00017" summary="Changed the blur type in find_balls from median to Gaussian, which seems&#10;to both improve detection, and increase fps. Did some debugging in&#10;find_ball_groups. I made it so that the colorthresh was raised if the&#10;circle is white, since the queball often goes very quickly and blurs,&#10;making it look much more like the table color. I also added a .ispartial&#10;attribute to the Circle class, which looks at the mean color of each row&#10;and column within the ball crop and determines whether the circle is&#10;made from a stripe on a striped ball or something. I removed the hsv&#10;stuff for the balls to help playback speed. I deemed the detectintrusion&#10;method I had started to be time computationally intensive. Will have to &#10;come up with another solution, or just run that only every n frames.">
      <created>1576707394520</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1576707394521</updated>
    </task>
    <task id="LOCAL-00018" summary="Coolest thing: I increased the fps from ~20 to ~35 by having the table's&#10;find_balls method crop down the playfield image, rather than assigning &#10;zeros. I had to add the cropped amount back into the circle centers&#10;after, but it's way, way faster. Very happy about that.&#10;&#10;I have also started adding the trajectory estimation lines. Currently, &#10;it takes the balls past centers and fits a line to them, then calculates&#10;where the hit-point would be on the wall. Have not yet factored in the&#10;other balls or reflection angles. That's coming. I added a movement&#10;threshold attribute to the balls that determines how far the ball has to&#10;go in a frame to draw the motion line. Also added an ismoving attribute&#10;which I think I will need when it comes to collision estimation. The&#10;ball trajectory estimation is currently all happening in the Ball's&#10;find_future_path method. I also had cProfile sort by time.&#10;&#10;Issues:&#10;- false balls still appear on hands and clothes, and they often appear&#10;randomly, triggering the drawing of trajectory lines. That's the main&#10;issue at the moment.">
      <created>1576718286823</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1576718286823</updated>
    </task>
    <task id="LOCAL-00019" summary="Made some major changes!!&#10;&#10;- Most recently I added the average colors of all of the balls, which&#10;    helps to weed out shirtballs early. that's in the find_balls method.&#10;- I also added a method to the table that sets the loctaions of the&#10;    pockets. I haven't used them yet.&#10;- I changed the draw_circles method so that it can take a list of Circle&#10;    objects, rather than just what houghCircles spits out.&#10;- I added a group to table called allballs, which i don't remove balls&#10;    from, so that I can graph certain things at the end for debugging.&#10;- I added an extra debugging step, which takes the closest color match&#10;    of each circle and appends it to a global list along with the frame&#10;    number, the color diff and the distance between the two, etc.&#10;- More importantly: I added trajectory plotting. It's definitely not&#10;    accurate yet. Still many things to sort out, but once a ball starts&#10;    moving, it fits a line to the past points, and draws a line in the&#10;    direction of motion. If it's going to hit a border, it will show the&#10;    reflection path. It now also figures out whether a ball is going to&#10;    be hit by an oncoming ball, and is currently set to turn the circle&#10;    around the ball red if it is predicted to be hit. I have not yet&#10;    added the ability to predict the exact hit point of the balls, and&#10;    the consequent path of both.&#10;- I moved the inpocket attribute from the Ball class to the Circle class&#10;- I created a Buffer class, which is a subclass of a list, which you can&#10;    set a max length for, saving me some lines of 'if len(x) &gt; y' type&#10;    stuff.&#10;- I also started a motion class that I might might want to use for the &#10;    balls, rather than having all the separate attributes.&#10;- The main important new methods in the ball class are find_future_path,&#10;    ischaotic, and checkballsinpath.">
      <created>1577041454168</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1577041454168</updated>
    </task>
    <task id="LOCAL-00020" summary="added a cross-product wall-collision detection method.">
      <created>1584332755580</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1584332755580</updated>
    </task>
    <option name="localTasksCounter" value="21" />
    <servers />
  </component>
  <component name="TodoView" selected-index="4">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="Added and updated some nested functions within the &#10;Table.check_all_intersections() method to look at all the intersecting &#10;points of the averaged lines and figure out which ones to keep. &#10;Here's the algorithm:&#10;1. check to see how far each point is from the center of the frame&#10;2. separate the points by what quadrant of the frame they are in,&#10;   such as upper-right 'ur' or bottom-left 'bl' and store in a dict&#10;3. sort the list in each quadrant by their distances from the center&#10;4. iterate through the quadrants, and grab the minimum center-dist point&#10;   from each. since the playfield is flat and formless, I am assuming &#10;   for now that the minimum lines in each quadrant will give us the&#10;   playfield lines, assuming we aren't missing lines in the detection&#10;   stage.&#10;5. check all of the points in each quadrant agains the groups assigned &#10;   to the good group list, and remove any that are &quot;inline&quot; with any of&#10;   the known good points. if they share an x or a y value, we know that&#10;   they cannot be entirely new lines representing a new part of the table&#10;   &#10;I have not yet sorted and assigned these remaining point-groups to their &#10;corresponding table part. That's next.&#10;&#10;At this point I certainly haven't PEP8'd it." />
    <MESSAGE value="Got rid of some old unused functions and methods, and tons of old commented out lines.&#10;made the check_all_intersections method returns the list of known good points.&#10;replaced the set_boxes method with one that takes those known good points&#10;and sets them as the tables playbox, pocketbox, and tablebox attributes.&#10;added a drawboxes method to table that is called from play_frame() for &#10;if you want to be able to see the boundary boxes on the live playback." />
    <MESSAGE value="Removed some more old unused functions and re-organized the Table.find_balls()&#10;method a bit. I added the ability to have different ball detection settings. &#10;I also Started the ball class.&#10;&#10;Next, I need to figure out how to make it figure out which balls are the&#10;from one frame to the next, so that I can draw the directional prediction &#10;lines" />
    <MESSAGE value="Added FPS tracking. Also added a global copy of each frame so that ball &#10;objects can easily access them for color checking. Added circles and balls&#10;lists to the Table class. Added a find_real_balls method to table to&#10;sort through the circles and decide whether to actually grant them ballship.&#10;created calculate_radius_square method to find the upper left and bottom&#10;right corners of each detected ball so that the color can be averaged easily.&#10;Also started adding to the Ball class. they now automatically take a crop &#10;of the image for color averaging. I haven't yet implemented the actual&#10;averaging operation. Also changed the cv.waitKey from triggering when esc&#10;is pressed to just cv.waitKey(1). I don't know why, but in a test, having&#10;a specific waitkey seemed to lower the frame rate considerably." />
    <MESSAGE value="Added some descriptions for each of the global settings. find_balls now &#10;appends the circles found in each frame to the Table.circlehistory list,&#10;and deletes the oldest item, keeping the list ballframebuffer frames long.&#10;also made it so that get_ball_color is passed the balls number in the &#10;list, so that a seperate debug image can be output for each ball." />
    <MESSAGE value="Started appending circles and  balls to table's circlehistory and ballhistory&#10;lists. Added the findlastposition method to the Ball class, which takes&#10;the ballhistory list and finds the ball with the smallest difference in &#10;distance. It then updates its lastpos and lastdist with the previous position,&#10;and the distance between the two points respectively. Added is_moving method&#10;which looks at the two points (current and past) and returns True if the&#10;distance is greater than the movementthresh. Started the get_movement_direction&#10;method which identifies the slope, and will then decide where to draw the &#10;motion line. Also made a global version of get_dist, and added the ability&#10;to specify whether you want the absolute value distance, or the relative,&#10;with the first point being the most recent, and the second being the historic." />
    <MESSAGE value="Renamed the Ball class to Circle, so that I can have a subclass Ball &#10;that is only for graduated circles. Added a distance threshold for the &#10;circles find_last_position method that returns None for lastpos and dist&#10;if the distance is too high. This is to make it easy while iterating to&#10;know where HoughCircles missed failed ball in a certain frame. Also&#10;added to get_movement_path. It currently just returns a line from the&#10;current center to its center from the previous frame." />
    <MESSAGE value="Completely revised the distance detection structure. I removed all &#10;methods from the Circle class except for those used to grab the color&#10;within that circle, and I moved the ball-continuity process into the&#10;Table.find_ball_groups method. I added a global frame number variable &#10;that I use for debugging. Basically, every frame, the new set of circles&#10;found is weighed against those in the last frame. Circles that seem to&#10;be contiguous are put into a group with their selves from past frames&#10;and added to Table.grouped_circles. I also added a color checking in &#10;addition to distance checking to help make sure the balls are the same.&#10;The major additions all happened within find_ball_groups. I added a&#10;frames folder to debug_images, and it is currently set up to draw the&#10;circles found in each group over every frame. Each group is drawn with &#10;a different color for better debugging." />
    <MESSAGE value="Created the Ball subclass of Circle. So far, the only thing that's&#10;new from the circle is a .past attribute, which is a list of Circle&#10;objects that were deemed within the Table's find_ball_groups method to &#10;be the same ball from past frames. The find_ball_groups method works&#10;about the same as it did in the last commit, except it has been adapted&#10;so that, rather than just using a list of lists of past locations for &#10;each ball stored directly as a table attribute, the table's list is now&#10;full of ball objects. I added a whole bunch of magic to the Ball class,&#10;so that they can be indexed and appended all the same, so very little&#10;change was needed within the find_ball_groups method. I decided to&#10;switch to Ball objects so that I could more easily compare color and&#10;collisions with methods within the Ball class. Have not implemented any&#10;yet." />
    <MESSAGE value="I restructured the decision tree within find_ball_groups so that it&#10;looks at color first, then moves on to distance. This seems to work much&#10;better. It seems to be able to group balls moving very quickly, even if&#10;there is a missing frame. Huge improvement.&#10;&#10;I also added a method to help with motion-blurred circles. Often Hough-&#10;Circles detects 2 circles on a ball when it is moving very quickly, but&#10;so far the circles have always somewhat overlapped, so I added a method&#10;that would look at all the circles from the frame, and see if any were&#10;closer together than their radii would allow in real life, and if there &#10;were, I would replace them with a point right in between the two. This &#10;improves color comparison as well.&#10;&#10;I also made a few of the Table methods static, and rearranged them to be&#10;all together at the bottom of the Table methods." />
    <MESSAGE value="I added cProfile to try and figure out where the speed could be improved&#10;and found that opencv imshow and imwrite were taking the majority of the&#10;time. I am now working on implementing pyglview for showing the images&#10;so that the gpu can be utilized for playback. I put all of the imwrite&#10;calls under if debug: statements, so that I could turn that on and off&#10;easily for speed tests." />
    <MESSAGE value="Now utilizes OpenGL via pyglview to achieve up to 23 fps. The prior&#10;version, using cv.imshow, got usually only around 4 to 8 fps. It is not&#10;feasible to use this real time with a projector and camera. HOOORAY!!!&#10;I also added a livegroups option at the top, which allows you to see the&#10;group estimations live on playback, rather than saving the frames to &#10;files individually." />
    <MESSAGE value="Now utilizes OpenGL via pyglview to achieve up to 23 fps. The prior&#10;version, using cv.imshow, got usually only around 4 to 8 fps. It is not&#10;feasible to use this real time with a projector and camera. HOOORAY!!!&#10;I also added a livegroups option at the top, which allows you to see the&#10;group estimations live on playback, rather than saving the frames to &#10;files individually" />
    <MESSAGE value="I moved some of the initialization stuff like creating the capture and&#10;viewer instances from the top of the document to the main function. I&#10;also made it so that it re-instantiates the capture object after the&#10;Table is initialized so that it doesn't lose all the frames that the &#10;table uses to find itself. I also added a global cleanframe variable &#10;that is unadulterated by lines drawn by opencv. This is important for&#10;color comparison mainly. I added a third setting under find_balls, that&#10;seems to work a little better. I added a isblurred attribute to the&#10;circle class, which is set to False by default and updated by the &#10;average_motionblur_circles method. I then updated find_ball_groups so &#10;that there is a lower regular color threshold, and one that is used only&#10;if that circle was averaged from a blur. I also added an nmissingframes&#10;attribute to the ball class, which I use to multiply the distthresh by.&#10;I also added a method under the Ball class called is_past_boundary which&#10;take a particular boundary box as an argument, and returns True if the&#10;center of the ball is beyond that boundary. I also added an inpocket &#10;attribute to the Ball class, which is set to true if the ball is outside&#10;that boundary. I also changed the colors used to show the ball groupings&#10;to use the colors of the balls themselves, rather than random bright&#10;colors. This makes it easier to know if balls switch groups, and if the&#10;color average seems accurate. The color of the circles turns to green&#10;if it goes into a pocket." />
    <MESSAGE value="More tuning on the ball continuity stuff. I added a x2 multiplier to the&#10;nmissingframes distancethresh multiplier. I added a pastdists attribute&#10;to the Ball class that I may use to detect anomalous detections. I made&#10;it so that balls that aren't detected at the very beginning start their&#10;own ball object, which goes away if it has a few missing frames and a&#10;total .past length of 2 or less, or if it has been missing for over 20&#10;frames. I currently have it so that it prints the bgr color tuple of&#10;each ball on the table, in the corresponding color. This is just for&#10;debugging, since there seem to be issues with balls swapping groups.&#10;&#10;Now I plan to try to sort the iteration in find_ball_groups by color&#10;differences as a priority, as opposed to distance first like it is now. &#10;I wish myself luck refactoring all that without creating a giant mess." />
    <MESSAGE value="The main thing that I did was to change the dist_list function to&#10;colordiffs_n_distances, which does the same thing as dist_list did, but&#10;adds color differences and sorts by them. This makes it so that similar&#10;colors take priority over close distances. I also made it so that, once&#10;a ball is in a pocket, it won't look for itself on the playfield &#10;anymore. I haven't yet set exceptions for the white ball. That needs to&#10;happen. I increased the color threshold in average_motionblur_circles to&#10;catch more. Keep an eye out for problems with that. I started with a&#10;method to detect intrusions of arms and bodies onto the table. Just&#10;started, so it's not yet doing anything. I also added the ability for&#10;balls and circles to get hsv color. Haven't used it for anything yet,&#10;but I thought I'd play around with that and see where it gets me. I &#10;added a colorpast attribute to the Ball class, which keeps a list of&#10;ballframebuffer x 3 = 15 currently, and that's used to find the average&#10;color of the ball from the past little bit, because in the case of&#10;striped balls, there were some issues. Also added nballs as a global &#10;but haven't implemented it yet. The idea is that it would know that, if &#10;there are more balls than that number in its list, the bar for &#10;baller-status needs to be raised. More tomorrow!(:" />
    <MESSAGE value="Changed the blur type in find_balls from median to Gaussian, which seems&#10;to both improve detection, and increase fps. Did some debugging in&#10;find_ball_groups. I made it so that the colorthresh was raised if the&#10;circle is white, since the queball often goes very quickly and blurs,&#10;making it look much more like the table color. I also added a .ispartial&#10;attribute to the Circle class, which looks at the mean color of each row&#10;and column within the ball crop and determines whether the circle is&#10;made from a stripe on a striped ball or something. I removed the hsv&#10;stuff for the balls to help playback speed. I deemed the detectintrusion&#10;method I had started to be time computationally intensive. Will have to &#10;come up with another solution, or just run that only every n frames." />
    <MESSAGE value="Coolest thing: I increased the fps from ~20 to ~35 by having the table's&#10;find_balls method crop down the playfield image, rather than assigning &#10;zeros. I had to add the cropped amount back into the circle centers&#10;after, but it's way, way faster. Very happy about that.&#10;&#10;I have also started adding the trajectory estimation lines. Currently, &#10;it takes the balls past centers and fits a line to them, then calculates&#10;where the hit-point would be on the wall. Have not yet factored in the&#10;other balls or reflection angles. That's coming. I added a movement&#10;threshold attribute to the balls that determines how far the ball has to&#10;go in a frame to draw the motion line. Also added an ismoving attribute&#10;which I think I will need when it comes to collision estimation. The&#10;ball trajectory estimation is currently all happening in the Ball's&#10;find_future_path method. I also had cProfile sort by time.&#10;&#10;Issues:&#10;- false balls still appear on hands and clothes, and they often appear&#10;randomly, triggering the drawing of trajectory lines. That's the main&#10;issue at the moment." />
    <MESSAGE value="Made some major changes!!&#10;&#10;- Most recently I added the average colors of all of the balls, which&#10;    helps to weed out shirtballs early. that's in the find_balls method.&#10;- I also added a method to the table that sets the loctaions of the&#10;    pockets. I haven't used them yet.&#10;- I changed the draw_circles method so that it can take a list of Circle&#10;    objects, rather than just what houghCircles spits out.&#10;- I added a group to table called allballs, which i don't remove balls&#10;    from, so that I can graph certain things at the end for debugging.&#10;- I added an extra debugging step, which takes the closest color match&#10;    of each circle and appends it to a global list along with the frame&#10;    number, the color diff and the distance between the two, etc.&#10;- More importantly: I added trajectory plotting. It's definitely not&#10;    accurate yet. Still many things to sort out, but once a ball starts&#10;    moving, it fits a line to the past points, and draws a line in the&#10;    direction of motion. If it's going to hit a border, it will show the&#10;    reflection path. It now also figures out whether a ball is going to&#10;    be hit by an oncoming ball, and is currently set to turn the circle&#10;    around the ball red if it is predicted to be hit. I have not yet&#10;    added the ability to predict the exact hit point of the balls, and&#10;    the consequent path of both.&#10;- I moved the inpocket attribute from the Ball class to the Circle class&#10;- I created a Buffer class, which is a subclass of a list, which you can&#10;    set a max length for, saving me some lines of 'if len(x) &gt; y' type&#10;    stuff.&#10;- I also started a motion class that I might might want to use for the &#10;    balls, rather than having all the separate attributes.&#10;- The main important new methods in the ball class are find_future_path,&#10;    ischaotic, and checkballsinpath." />
    <MESSAGE value="Bounce lines are working, but in iffy condition right now.&#10;&#10;- I started splitting up find_future_path into multiple methods so that &#10;    I could make things a bit more recursive. I want not only the &#10;    original line from the ball, but the bounces as well, to reflect off &#10;    of any walls that the lines cross. I'm definitely not done with this&#10;&#10;- I found an issue with checkballsinpath slowing things down and fixed&#10;    this was due to the fact that I was continually appending to the&#10;    balls motionlines but never clearing it. Now that is done every &#10;    frame." />
    <MESSAGE value="added a cross-product wall-collision detection method." />
    <option name="LAST_COMMIT_MESSAGE" value="added a cross-product wall-collision detection method." />
  </component>
  <component name="WindowStateProjectService">
    <state x="981" y="337" key="CommitChangelistDialog2" timestamp="1584332753327">
      <screen x="0" y="0" width="3008" height="1692" />
    </state>
    <state x="981" y="337" key="CommitChangelistDialog2/0.0.3008.1692@0.0.3008.1692" timestamp="1584332753327" />
    <state width="1878" height="327" key="GridCell.Tab.0.bottom" timestamp="1584425664306">
      <screen x="0" y="0" width="1920" height="1200" />
    </state>
    <state width="1878" height="327" key="GridCell.Tab.0.bottom/0.0.1920.1200@0.0.1920.1200" timestamp="1584425664306" />
    <state width="2966" height="482" key="GridCell.Tab.0.bottom/0.0.3008.1692@0.0.3008.1692" timestamp="1584334364652" />
    <state width="1878" height="327" key="GridCell.Tab.0.center" timestamp="1584425664304">
      <screen x="0" y="0" width="1920" height="1200" />
    </state>
    <state width="1878" height="327" key="GridCell.Tab.0.center/0.0.1920.1200@0.0.1920.1200" timestamp="1584425664304" />
    <state width="2966" height="482" key="GridCell.Tab.0.center/0.0.3008.1692@0.0.3008.1692" timestamp="1584334364651" />
    <state width="1878" height="327" key="GridCell.Tab.0.left" timestamp="1584425664304">
      <screen x="0" y="0" width="1920" height="1200" />
    </state>
    <state width="1878" height="327" key="GridCell.Tab.0.left/0.0.1920.1200@0.0.1920.1200" timestamp="1584425664304" />
    <state width="2966" height="482" key="GridCell.Tab.0.left/0.0.3008.1692@0.0.3008.1692" timestamp="1584334364650" />
    <state width="1878" height="327" key="GridCell.Tab.0.right" timestamp="1584425664305">
      <screen x="0" y="0" width="1920" height="1200" />
    </state>
    <state width="1878" height="327" key="GridCell.Tab.0.right/0.0.1920.1200@0.0.1920.1200" timestamp="1584425664305" />
    <state width="2966" height="482" key="GridCell.Tab.0.right/0.0.3008.1692@0.0.3008.1692" timestamp="1584334364652" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/depr/tests2.py</url>
          <line>11</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/depr/tests3.py</url>
          <line>43</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/PoolPredictor$Main.coverage" NAME="Main Coverage Results" MODIFIED="1584412080551" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>